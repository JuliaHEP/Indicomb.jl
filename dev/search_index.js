var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Indicomb","category":"page"},{"location":"#Indicomb","page":"Home","title":"Indicomb","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for Indicomb.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Indicomb]","category":"page"},{"location":"#Indicomb.get_events_catnum_name-Tuple{Any, Any, Any}","page":"Home","title":"Indicomb.get_events_catnum_name","text":"get_events_catnum_name(baseurl, cat_num, evt_name; params...)\n\nMain API for basic users, given base url (Indico server domain), category number and event title filter, return a list of (detail=subcontributions) events JSON object.\n\nExample\n\njulia> get_events_catnum_name(\"https://indico.cern.ch\", 1X3X, \"XXXXX\"; from=\"2021-06-10\", to=\"2021-06-30\", apikey=\".....\", secretkey=\"....\");\nJSON3.Object{Vector{UInt8}, SubArray{UInt64, 1, Vector{UInt64}, Tuple{UnitRange{Int64}}, true}} with 29 entries:\n  :_type            => \"Conference\"\n  :id               => \"10521XX\"\n  :title            => \"XXXXX group meeting\"\n  :description      => \"\"\n  :startDate        => {…\n  :timezone         => \"Europe/Zurich\"\n  :endDate          => {…\n  :room             => \"\"\n  :location         => \"\"\n  :address          => \"\"\n  ...\n\n\n\n\n\n","category":"method"},{"location":"#Indicomb.indico_request-Tuple{Any}","page":"Home","title":"Indicomb.indico_request","text":"indico_request(path; params...)\n\nBuild a path?params url object (without the base domain). The key feature is to construct signature= query based on the SHA1 HMAC algo. The construction of signature only cares about path, not base-site domain.\n\n\n\n\n\n","category":"method"},{"location":"#Indicomb.sha1_hmac-Tuple{Any, Any}","page":"Home","title":"Indicomb.sha1_hmac","text":"sha1_hmac(key, data)\n\nReturn a 1-cycle daupted digest given key and data.\n\nExample\n\njulia> bytes2hex(Indicomb.sha1_hmac(\"123\", \"Julia\"))\n\"eca18118a715a32ab5f340f57d917c1e2eec96f5\"\n\nnote: Note\nIndico uses sorted, query parameters as data. i.e.:Given: \"https://cern.ch/export/categ/1135.json?from=2020&apikey=8\", data into this function will be \"apikey=8&from=2020\" (string from comes from HTTP.escapeuri).\n\n\n\n\n\n","category":"method"}]
}
